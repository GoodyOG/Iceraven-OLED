name: Build IceRaven Dark Theme (Auto-Release)

on:
  workflow_dispatch:
  release:
    types: [created]

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
      - uses: actions/checkout@v3
      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y wget apktool zipalign apksigner jq openjdk-17-jdk gh
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Get Released APK URL and Version
        id: get_release
        run: |
          ASSET_URL=$(gh release download ${{ github.event.release.tag_name }} -R fork-maintainers/iceraven-browser --pattern *arm64*forkRelease.apk | cut -f 1 -d ' ')
          echo "LATEST_RELEASE=$ASSET_URL" >> $GITHUB_OUTPUT
          echo "ICERAVEN_VERSION=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
      - name: Download Latest APK
        run: wget -q "${{ steps.get_release.outputs.LATEST_RELEASE }}" -O iceraven.apk
      - name: Run Build Script
        run: bash build.sh
      - name: Sign APK
        run: |
          echo "${{ secrets.KEYSTORE }}" | base64 -di > keystore.jks
          apksigner sign --ks keystore.jks --ks-pass pass:${{ secrets.KEYSTORE_PASSPHRASE }} --key-pass pass:${{ secrets.KEY_PASSWORD }} iceraven-patched-signed.apk
      - name: Upload APK as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: iceraven-dark-apk
          path: iceraven-patched-signed.apk
      - name: Create Release (if new version)
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }} # Or ${{ github.token }} if in the original repo
        with:
          tag_name: iceraven-dark-${{ steps.get_release.outputs.ICERAVEN_VERSION }}
          files: iceraven-patched-signed.apk
      - name: Get latest release info  # Optional: Get info about the newly created release
        id: latest_release
        if: steps.create_release.outcome == 'success'
        uses: cardinalby/git-get-release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }} # Or ${{ github.token }} if in the original repo
        with:
          latest: true
