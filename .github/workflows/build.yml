name: Build IceRaven Dark Theme (Auto-Release)

on:
  schedule:
    - cron: '00 0 * * *'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y wget apktool zipalign apksigner jq openjdk-17-jdk
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Get Latest IceRaven Release Info
        id: get_upstream_release
        run: |
          UPSTREAM_JSON=$(curl -s "https://api.github.com/repos/fork-maintainers/iceraven-browser/releases/latest")
          UPSTREAM_TAG=$(echo "$UPSTREAM_JSON" | jq -r '.tag_name')
          DOWNLOAD_URL=$(echo "$UPSTREAM_JSON" | jq -r '.assets[] | select(.name | test("arm64.*forkRelease.apk$")) | .browser_download_url')
          echo "LATEST_RELEASE=$DOWNLOAD_URL" >> $GITHUB_OUTPUT
          echo "ICERAVEN_VERSION=$UPSTREAM_TAG" >> $GITHUB_OUTPUT
      - name: Get Current Repo's Latest Release
        id: current_release
        run: |
          RESPONSE=$(curl -s -H "Authorization: token ${{ secrets.RELEASE_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/releases/latest")
          if [[ $(echo "$RESPONSE" | jq -r '.message') == "Not Found" ]]; then
            CURRENT_TAG="v0.0.0"
          else
            CURRENT_TAG=$(echo "$RESPONSE" | jq -r '.tag_name')
          fi
          echo "CURRENT_TAG=$CURRENT_TAG" >> $GITHUB_OUTPUT
      - name: Exit if no new version
        if: steps.get_upstream_release.outputs.ICERAVEN_VERSION == steps.current_release.outputs.CURRENT_TAG
        run: exit 0
      - name: Download Latest APK
        run: |
          wget -q "${{ steps.get_upstream_release.outputs.LATEST_RELEASE }}" -O iceraven.apk
      - name: Run Build Script
        run: bash build.sh
      - name: Sign APK
        run: |
          echo "${{ secrets.KEYSTORE }}" | base64 -di > keystore.jks
          apksigner sign --ks keystore.jks --ks-pass pass:${{ secrets.KEYSTORE_PASSPHRASE }} --key-pass pass:${{ secrets.KEY_PASSWORD }} iceraven-patched-signed.apk
      - name: Upload APK as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: iceraven-dark-apk
          path: iceraven-patched-signed.apk
      - name: Create Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          tag_name: ${{ steps.get_upstream_release.outputs.ICERAVEN_VERSION }}
          files: iceraven-patched-signed.apk
