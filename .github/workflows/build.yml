name: Build IceRaven Dark Theme (Auto-Release)

on:
  schedule:
    - cron: '00 0 * * *'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true
name: 🦊 Iceraven OLED Builder

on:
  schedule:
    - cron: '0 0 * * *'  # Daily UTC midnight
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-release:
    runs-on: ubuntu-24.04  # Latest LTS
    environment: production
    permissions:
      contents: write  # For gh-release

    steps:
      - name: 🛠️ Checkout repo
        uses: actions/checkout@v4

      - name: 📦 Setup JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'microsoft'
name: 🦊 Iceraven OLED Builder
name: 🦊 Iceraven OLED Builder

on:
  schedule:
    - cron: '0 0 * * *'  # Daily UTC midnight
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-release:
    runs-on: ubuntu-24.04
    permissions:
      contents: write

    steps:
      - name: 🛠️ Checkout repository
        uses: actions/checkout@v4

      - name: 📦 Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: 🚀 Fetch latest ARM64 APK
        id: fetch-apk
        run: |
          LATEST_TAG=$(curl -s https://api.github.com/repos/fork-maintainers/iceraven-browser/releases/latest | jq -r '.tag_name')
          echo "version=$LATEST_TAG" >> $GITHUB_OUTPUT
          wget -q "https://github.com/fork-maintainers/iceraven-browser/releases/download/$LATEST_TAG/iceraven-$LATEST_TAG-arm64-v8a-forkRelease.apk" -O iceraven.apk

      - name: 🔐 Prepare signing environment
        run: |
          echo "${{ secrets.KEYSTORE }}" | base64 -d > keystore.jks
          echo "KEYSTORE=keystore.jks" >> $GITHUB_ENV
          echo "KEYSTORE_PASS=${{ secrets.KEYSTORE_PASS }}" >> $GITHUB_ENV

      - name: 🛠️ Execute build script
        run: |
          chmod +x build.sh
          ./build.sh

      - name: 🚢 Create GitHub release
        if: ${{ success() }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.fetch-apk.outputs.version }}-oled
          files: iceraven-oled.apk
          generate_release_notes: true
        env:  # FIXED INDENTATION HERE
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

on:
  schedule:
    - cron: '0 0 * * *'  # Daily UTC midnight
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-release:
    runs-on: ubuntu-24.04
    permissions:
      contents: write  # Required for release creation

    steps:
      - name: 🛠️ Checkout repository
        uses: actions/checkout@v4

      - name: 📦 Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'  # CORRECTED from 'microsoft'
          java-version: '21'

      - name: 🚀 Fetch latest ARM64 APK
        id: fetch-apk
        run: |
          LATEST_TAG=$(curl -s https://api.github.com/repos/fork-maintainers/iceraven-browser/releases/latest | jq -r '.tag_name')
          echo "version=$LATEST_TAG" >> $GITHUB_OUTPUT
          wget -q "https://github.com/fork-maintainers/iceraven-browser/releases/download/$LATEST_TAG/iceraven-$LATEST_TAG-arm64-v8a-forkRelease.apk" -O iceraven.apk

      - name: 🔐 Prepare signing environment
        run: |
          echo "${{ secrets.KEYSTORE }}" | base64 -d > keystore.jks
          echo "KEYSTORE=keystore.jks" >> $GITHUB_ENV
          echo "KEYSTORE_PASS=${{ secrets.KEYSTORE_PASS }}" >> $GITHUB_ENV
 iceraven-oled.apk
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
_PASSPHRASE }} --key-pass pass:${{ secrets.KEY_PASSWORD }} iceraven-patched-signed.apk
      - name: Upload APK as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: iceraven-dark-apk
          path: iceraven-patched-signed.apk
      - name: Create Release (if new version)
        id: create_release
        if: steps.get_release.outputs.ICERAVEN_VERSION != steps.latest_release.outputs.tag_name
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}  # Use the PAT secret
        with:
          tag_name: ${{ steps.get_release.outputs.ICERAVEN_VERSION }}
          files: iceraven-patched-signed.apk
      - name: Get latest release info
        id: latest_release
        if: steps.create_release.outcome == 'success'
        uses: cardinalby/git-get-release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          latest: true
